{"version":3,"sources":["../../src/tasks/steps.js"],"names":["taskTree","bustedTasks","steps","tasks","start","name","directory","task","indexOf","Error","watch","map","toJSON","defineTasks","defns","busted"],"mappings":";;;;;;;;AAAA;;;;;;AAMA,IAAIA,QAAJ;AACA,IAAIC,WAAJ;;AAEA;;;;AAIA,MAAMC,QAAQC,UAAU;AACtB;;;;;AAKMC,OAAN,CAAaC,IAAb,EAAmBC,SAAnB,EAA8B;AAAA;AAC5B,WAAK,IAAIC,IAAT,IAAiBJ,KAAjB,EAAwB;AACtB,YAAII,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;AAC5B,gBAAM,IAAIC,KAAJ,CAAU,8DAAV,CAAN;AACD;;AAED,qCAAMT,SAASO,IAAT,EAAeH,KAAf,CAAsB,GAAEC,IAAK,IAAGE,IAAK,EAArC,EAAwCD,SAAxC,EAAmD,CAAC,CAACL,YAAYM,IAAZ,CAArD,CAAN;AACD;AAP2B;AAQ7B,GAdqB;;AAgBtB;;;AAGAG,QAAOL,IAAP,EAAaC,SAAb,EAAwB;AACtB,WAAO,mBAAYH,MAAMQ,GAAN,CAAUJ,QAAQ;AACnC,UAAIA,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;AAC5B,cAAM,IAAIC,KAAJ,CAAU,8DAAV,CAAN;AACD;;AAED,aAAOT,SAASO,IAAT,EAAeG,KAAf,CAAqBL,OAAO,GAAP,GAAaE,IAAlC,EAAwCD,SAAxC,CAAP;AACD,KANkB,CAAZ,CAAP;AAOD,GA3BqB;;AA6BtB;;;;;;;AAOAM,WAAU;AACR,WAAO,CAAC,OAAD,EAAUT,KAAV,CAAP;AACD;AAtCqB,CAAV,CAAd;;AAyCAD,MAAMW,WAAN,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCf,aAAWc,KAAX;AACAb,gBAAcc,MAAd;AACD,CAHD;;kBAKeb,K","file":"../../src/tasks/steps.js","sourcesContent":["/**\n * @file src/plugins/steps.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nlet taskTree\nlet bustedTasks\n\n/**\n * Creates a Hopp-ish object that runs\n * subtasks in steps.\n */\nconst steps = tasks => ({\n  /**\n   * Starts all tasks one by one.\n   *\n   * @return {Promise} a promise that will be resolved when all tasks are done\n   */\n  async start (name, directory) {\n    for (let task of tasks) {\n      if (task.indexOf(':') !== -1) {\n        throw new Error('You cannot use `:` in a task name. It is a restricted token.')\n      }\n\n      await taskTree[task].start(`${name}:${task}`, directory, !!bustedTasks[task])\n    }\n  },\n\n  /**\n   * Watch all subtasks.\n   */\n  watch (name, directory) {\n    return Promise.all(tasks.map(task => {\n      if (task.indexOf(':') !== -1) {\n        throw new Error('You cannot use `:` in a task name. It is a restricted token.')\n      }\n\n      return taskTree[task].watch(name + ':' + task, directory)\n    }))\n  },\n\n  /**\n   * Converts tasks to JSON.\n   * Just converts them into an tasksay of\n   * JSON objects.\n   *\n   * @return {tasksay}\n   */\n  toJSON () {\n    return ['steps', tasks]\n  }\n})\n\nsteps.defineTasks = (defns, busted) => {\n  taskTree = defns\n  bustedTasks = busted\n}\n\nexport default steps\n"]}