{"version":3,"sources":["../../src/tasks/mgr.js"],"names":["cache","debug","watchlog","log","plugins","pluginConfig","isUndefined","value","undefined","Hopp","constructor","src","Array","pluginCtx","d","stack","rename","plugin","method","hasOwnProperty","bind","dest","out","mapper","Error","push","doRename","filename","dirname","source","applyRename","basename","ext","substr","lastIndexOf","prefix","suffix","watch","name","directory","recache","watchers","forEach","newpath","resolve","nonMagic","recursive","indexOf","start","process","on","watcher","close","startBundling","modified","useDoubleCache","sourcemap","files","freshBuild","unmodified","file","originalFd","tmpBundle","tmpBundlePath","bundle","Date","now","stream","createReadStream","fd","autoClose","replace","end","concat","buildStack","add","reject","pipe","createWriteStream","map","that","mode","_","pluginStream","obj","data","done","handler","err","retval","next","loadPlugin","taskName","args","mod","pathToPlugin","join","require","config","logger","pluginCache","error","safeTimeout","setTimeout","exit","needsBundling","needsRecaching","readonly","length","loadedPlugins","env","SKIP_BUILD","clearTimeout","outfile","body","output","tmp","tmppath","promise","newStream","resolved","then","val","toJSON","fromJSON","json"],"mappings":"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","file":"../../src/tasks/mgr.js","sourcesContent":["/**\n * @file src/tasks/mgr.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport fs from 'fs'\nimport path from 'path'\nimport pump from 'pump'\nimport glob from '../fs/glob'\nimport through2 from 'through2'\nimport * as cache from '../cache'\nimport getPath from '../fs/get-path'\nimport { _, createLogger } from '../utils'\nimport { buffer, Bundle, createReadStream, map as mapStream } from '../streams'\nimport { disableFSCache, mkdirp, mkdirpSync, openFile, tmpFile, tmpFileSync } from '../fs'\n\nconst { debug } = createLogger('hopp')\nconst watchlog = createLogger('hopp:watch').log\n\n/**\n * Plugins storage.\n */\nconst plugins = {}\nconst pluginConfig = {}\n\n/**\n * Test for undefined or null.\n */\nfunction isUndefined (value) {\n  return value === undefined || value === null\n}\n\n/**\n * Hopp class to manage tasks.\n */\nexport default class Hopp {\n  /**\n   * Creates a new task with the glob.\n   * DOES NOT START THE TASK.\n   *\n   * @param {Glob} src\n   * @return {Hopp} new hopp object\n   */\n  constructor (src) {\n    if (!(src instanceof Array)) {\n      src = [src]\n    }\n\n    // store context local to each task\n    this.pluginCtx = {}\n\n    // persistent info\n    this.d = {\n      src,\n      stack: [],\n      rename: []\n    }\n\n    // bind all plugin extras\n    for (const plugin in this) {\n      if (typeof this[plugin] === 'function') {\n        for (const method in this[plugin]) {\n          if (this[plugin].hasOwnProperty(method)) {\n            this[plugin][method] = this[plugin][method].bind(this)\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the destination of this pipeline.\n   * @param {String} out\n   * @return {Hopp} task manager\n   */\n  dest (out) {\n    this.d.dest = out\n    return this\n  }\n\n  /**\n   * Allow renaming of destination files.\n   * @param {Object|Function} mapper renaming options or renaming function\n   * @returns {Hopp} current object for chaining\n   */\n  rename (mapper) {\n    if (typeof mapper !== 'function' && typeof mapper !== 'object') {\n      throw new Error('Rename must be given a function or object.')\n    }\n\n    this.d.rename.push(mapper)\n    return this\n  }\n\n  /**\n   * Actually do the renaming.\n   * @param {String} filename the original name\n   * @param {String} dirname the destination directory\n   * @param {String} source the absolute source filename\n   * @returns {String} renamed filename\n   */\n  doRename (filename, dirname, source) {\n    let dest = dirname + '/' + filename\n\n    for (const mapper of this.d.rename) {\n      dest = this.applyRename(mapper, path.basename(dest), path.dirname(dest), source)\n    }\n\n    return dest\n  }\n\n  /**\n   * Apply a single rename.\n   * @param {Object|Function} mapper renaming object or function\n   * @param {String} filename the original name\n   * @param {String} dirname the destination directory\n   * @param {String} source the absolute source filename\n   * @returns {String} renamed filename\n   */\n  applyRename (mapper, filename, dirname, source) {\n    // if no rename is defined, just use current filename\n    if (!mapper) return dirname + '/' + filename\n\n    // functions are easy, but they break caching\n    if (typeof mapper === 'function') {\n      return mapper(filename, dirname, source)\n    }\n\n    // remove extension\n    let ext = filename.substr(1 + filename.lastIndexOf('.'))\n    filename = filename.substr(0, filename.lastIndexOf('.'))\n\n    // add prefix\n    if (mapper.prefix) {\n      filename = mapper.prefix + filename\n    }\n\n    // add suffix, before extension\n    if (mapper.suffix) {\n      filename += mapper.suffix\n    }\n\n    // change extension\n    if (mapper.ext) {\n      ext = mapper.ext\n    }\n\n    // output final filename into same dest directory\n    return dirname + '/' + filename + '.' + ext\n  }\n\n  /**\n   * Run task in continuous mode.\n   */\n  watch (name, directory, recache = false) {\n    name = `watch:${name}`\n\n    const watchers = []\n\n    this.d.src.forEach(src => {\n      // get most definitive path possible\n      let newpath = path.resolve(directory, glob.nonMagic(src))\n\n      // disable fs caching for watch\n      disableFSCache()\n\n      // start watch\n      watchlog('Watching for %s ...', name)\n      watchers.push(fs.watch(newpath, {\n        recursive: src.indexOf('/**/') !== -1\n      }, () => this.start(name, directory, recache, false)))\n    })\n\n    return new Promise(resolve => {\n      process.on('SIGINT', () => {\n        watchers.forEach(watcher => watcher.close())\n        resolve()\n      })\n    })\n  }\n\n  /**\n   * Handles bundling.\n   */\n  async startBundling (name, directory, modified, dest, useDoubleCache = true) {\n    const { log, debug } = createLogger(`hopp:${name}`)\n    debug('Switched to bundling mode')\n\n    /**\n     * Fetch sourcemap from cache.\n     */\n    const sourcemap = cache.sourcemap(name)\n\n    /**\n     * Get full list of current files.\n     */\n    const files = await glob(name, this.d.src, directory, useDoubleCache, true)\n\n    /**\n     * Create list of unmodified.\n     */\n    let freshBuild = true\n    const unmodified = {}\n\n    for (let file of files) {\n      if (modified.indexOf(file) === -1) {\n        unmodified[file] = true\n        freshBuild = false\n      }\n    }\n\n    /**\n     * Get old bundle & create new one.\n     */\n    const originalFd = freshBuild ? null : await openFile(dest, 'r')\n    const [tmpBundle, tmpBundlePath] = await tmpFile()\n\n    /**\n     * Create new bundle to forward to.\n     */\n    const bundle = new Bundle(directory, tmpBundle)\n\n    /**\n     * Since bundling starts streaming right away, we can count this\n     * as the start of the build.\n     */\n    const start = Date.now()\n    log('Starting task')\n\n    /**\n     * Add all files.\n     */\n    for (let file of files) {\n      let stream\n\n      if (unmodified[file]) {\n        debug('forward: %s', file)\n        stream = fs.createReadStream(null, {\n          fd: originalFd,\n          autoClose: false,\n          start: sourcemap[file.replace(directory, '.')].start,\n          end: sourcemap[file.replace(directory, '.')].end\n        })\n      } else {\n        debug('transform: %s', file)\n        stream = pump([\n          createReadStream(file, dest + '/' + path.basename(file))\n        ].concat(this.buildStack(name)))\n      }\n\n      bundle.add(file, stream)\n    }\n\n    /**\n     * Wait for bundling to end.\n     */\n    await bundle.end(tmpBundlePath)\n\n    /**\n     * Move the bundle to the new location.\n     */\n    if (originalFd) originalFd.close()\n    await mkdirp(path.dirname(dest).replace(directory, ''), directory)\n    await new Promise((resolve, reject) => {\n      const stream = fs.createReadStream(tmpBundlePath).pipe(fs.createWriteStream(dest))\n\n      stream.on('close', resolve)\n      stream.on('error', reject)\n    })\n\n    /**\n     * Update sourcemap.\n     */\n    cache.sourcemap(name, bundle.map)\n\n    log('Task ended (took %s ms)', Date.now() - start)\n  }\n\n  /**\n   * Converts all plugins in the stack into streams.\n   */\n  buildStack (name) {\n    const that = this\n\n    let mode = 'stream'\n\n    return this.d.stack.map(([plugin, _, method]) => {\n      const pluginStream = through2.obj(async function (data, _, done) {\n        try {\n          /**\n           * Try and get proper method - assume\n           * default by default.\n           */\n          const handler = plugins[plugin][method || 'default'](\n            that.pluginCtx[plugin],\n            data\n          )\n\n          // for async functions/promises\n          if ('then' in handler) {\n            try {\n              this.push(await handler)\n              done()\n            } catch (err) {\n              done(err)\n            }\n          } else if ('next' in handler) {\n            let retval\n\n            // for async generators\n            do {\n              retval = await handler.next()\n              this.push(retval.value)\n            } while (!retval.done)\n\n            done()\n          } else {\n            // otherwise, fail\n            done(new Error('Unknown return value received from ' + plugin))\n          }\n        } catch (err) {\n          done(err)\n        }\n      })\n\n      /**\n       * Enable buffer mode if required.\n       */\n      if (mode === 'stream' && pluginConfig[plugin].mode === 'buffer') {\n        mode = 'buffer'\n        return pump(buffer(), pluginStream)\n      }\n\n      /**\n       * Otherwise keep pumping.\n       */\n      return pluginStream\n    })\n  }\n\n  /**\n   * Loads a plugin, manages its env.\n   */\n  loadPlugin (taskName, plugin, args, directory) {\n    let mod = plugins[plugin]\n\n    if (!mod) {\n      // convert plugin path from relative back to absolute\n      try {\n        let pathToPlugin = plugin\n\n        if (plugin[0] !== '/') {\n          pathToPlugin = path.join(directory, 'node_modules', plugin)\n        }\n\n        mod = require(pathToPlugin)\n      } catch (err) {\n        debug('failed to load plugin: %s', err && err.stack ? err.stack : err)\n        throw new Error('Failed to load plugin: ' + plugin)\n      }\n\n      // expose module config\n      pluginConfig[plugin] = mod.config || {}\n\n      // add plugins to loaded plugins\n      plugins[plugin] = mod\n    }\n\n    // create plugin logger\n    const logger = createLogger(`hopp:${taskName}:${path.basename(plugin).substr(5)}`)\n\n    // load/create cache for plugin\n    const pluginCache = cache.plugin(plugin)\n\n    // create a new context for this plugin\n    this.pluginCtx[plugin] = {\n      args,\n      cache: pluginCache,\n      log: logger.log,\n      debug: logger.debug,\n      error: logger.error\n    }\n  }\n\n  /**\n   * Starts the pipeline.\n   * @return {Promise} resolves when task is complete\n   */\n  async start (name, directory, recache = false, useDoubleCache = true) {\n    const { log, debug, error } = createLogger(`hopp:${name}`)\n\n    /**\n     * Add timeout for safety.\n     */\n    const safeTimeout = setTimeout(() => {\n      error('Timeout exceeded! Task was hung.')\n      process.exit(-1)\n    }, 6e4)\n\n    /**\n     * Figure out if bundling is needed & load plugins.\n     */\n    if (isUndefined(this.needsBundling) || isUndefined(this.needsRecaching) || isUndefined(this.readonly) || (this.d.stack.length > 0 && !this.loadedPlugins)) {\n      this.loadedPlugins = true\n\n      this.d.stack.forEach(([plugin, args]) => {\n        if (!this.pluginCtx.hasOwnProperty(plugin)) {\n          this.loadPlugin(name, plugin, args, directory)\n        }\n\n        this.needsBundling = !!(this.needsBundling || pluginConfig[plugin].bundle)\n        this.needsRecaching = !!(this.needsRecaching || pluginConfig[plugin].recache)\n        this.readonly = !!(this.readonly || pluginConfig[plugin].readonly)\n\n        if (this.needsBundling && this.readonly) {\n          throw new Error('Task chain enabled bundling and readonly mode at the same time. Not sure what to do.')\n        }\n      })\n    }\n\n    /**\n     * Override recaching.\n     */\n    if (this.needsRecaching) {\n      recache = true\n    }\n\n    /**\n     * Get the modified files.\n     */\n    debug('task recache = %s', recache)\n    let files = await glob(name, this.d.src, directory, useDoubleCache, recache)\n\n    /**\n     * Quit now if we want to build skipping.\n     */\n    if (process.env.SKIP_BUILD === 'true') {\n      log('Updated cache')\n      return\n    }\n\n    if (files.length > 0) {\n      const dest = this.d.dest ? path.resolve(directory, getPath(this.d.dest)) : ''\n\n      /**\n       * Switch to bundling mode if need be.\n       */\n      if (this.needsBundling) {\n        await this.startBundling(name, directory, files, dest, useDoubleCache)\n        clearTimeout(safeTimeout)\n        return\n      }\n\n      /**\n       * Ensure dist directory exists.\n       */\n      if (!this.readonly || !this.d.dest) {\n        await mkdirp(dest.replace(directory, ''), directory)\n      }\n\n      /**\n       * Create streams.\n       */\n      files = _(files).map(file => {\n        const outfile = this.doRename(path.basename(file), dest, file)\n\n        return {\n          file,\n          outfile,\n          stream: [\n            createReadStream(file, outfile)\n          ]\n        }\n      })\n\n      /**\n       * Connect plugin streams with pipelines.\n       */\n      if (this.d.stack.length > 0) {\n        files.map(file => {\n          file.stream = file.stream.concat(this.buildStack(name))\n          return file\n        })\n      }\n\n      /**\n       * Connect with destination.\n       */\n      files.map(file => {\n        if (!this.readonly) {\n          // strip out the actual body and write it\n          file.stream.push(mapStream((data, next) => {\n            if (typeof data !== 'object' || !data.hasOwnProperty('body')) {\n              return next(new Error('A plugin has destroyed the stream by returning a non-object.'))\n            }\n\n            next(null, data.body)\n          }))\n\n          // add the writestream at the end\n          let output\n\n          if (!this.d.dest) {\n            const { fd: tmp, name: tmppath } = tmpFileSync()\n            output = fs.createWriteStream(null, {\n              fd: tmp\n            })\n\n            file.promise = new Promise((resolve, reject) => {\n              output.on('close', () => {\n                const newStream =\n                  fs.createReadStream(tmppath)\n                    .pipe(fs.createWriteStream(file.file))\n\n                newStream.on('error', reject)\n                newStream.on('close', resolve)\n              })\n            })\n          } else {\n            debug('Set output: %s', file.outfile)\n            mkdirpSync(path.dirname(file.outfile).replace(directory, ''), directory)\n            output = fs.createWriteStream(file.outfile)\n          }\n\n          file.stream.push(output)\n        }\n\n        // promisify the current pipeline\n        return new Promise((resolve, reject) => {\n          let resolved = false\n\n          // connect all streams together to form pipeline\n          file.stream = pump(file.stream, err => {\n            if (err) reject(err)\n            else if (!resolved && !file.promise) resolve()\n          })\n\n          if (file.promise) {\n            file.promise.then(() => {\n              resolved = true\n              resolve()\n            }, reject)\n          }\n        })\n      })\n\n      // start & wait for all pipelines to end\n      const start = Date.now()\n      log('Starting task for %s files', files.length)\n      await Promise.all(files.val())\n      log('Task ended (took %s ms)', Date.now() - start)\n\n      // clear the timeout\n      clearTimeout(safeTimeout)\n    } else {\n      log('Skipping task')\n    }\n  }\n\n  /**\n   * Converts task manager to JSON for storage.\n   * @return {Object} proper JSON object\n   */\n  toJSON () {\n    return {\n      d: this.d,\n      needsBundling: this.needsBundling,\n      needsRecaching: this.needsRecaching,\n      readonly: this.readonly\n    }\n  }\n\n  /**\n   * Deserializes a JSON object into a manager.\n   * @param {Object} json\n   * @return {Hopp} task manager\n   */\n  fromJSON (json) {\n    this.d = json.d\n    this.needsBundling = json.needsBundling\n    this.needsRecaching = json.needsRecaching\n    this.readonly = json.readonly\n\n    return this\n  }\n}\n"]}