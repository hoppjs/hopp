{"version":3,"sources":["../../src/tasks/goal.js"],"names":["taskDefns","bustedTasks","fromArray","arr","defineTasks","defns","busted","create","tasks","projectDir","mode","length","name","goal","Array","Error","map","task"],"mappings":";;;;;;;;;AAMA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,kBAAJ,C,CAVA;;;;;;AAWA,IAAIC,oBAAJ;;AAEA,SAASC,SAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAIA,IAAI,CAAJ,MAAW,UAAf,EAA2B;AACzB,WAAO,wBAAeA,IAAI,CAAJ,CAAf,CAAP;AACD;;AAED,MAAIA,IAAI,CAAJ,MAAW,OAAf,EAAwB;AACtB,WAAO,qBAAYA,IAAI,CAAJ,CAAZ,CAAP;AACD;;AAED,SAAO,qBAAYA,IAAI,CAAJ,CAAZ,CAAP;AACD;;AAEM,IAAMC,oCAAc,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5CN,cAAYK,KAAZ;AACAJ,gBAAcK,MAAd;;AAEA,kBAAYF,WAAZ,CAAwBC,KAAxB,EAA+BC,MAA/B;AACA,qBAAeF,WAAf,CAA2BC,KAA3B,EAAkCC,MAAlC;AACD,CANM;;AAQA,IAAMC,0BAAS,SAATA,MAAS,CAACC,KAAD,EAAQC,UAAR,EAAuC;AAAA,MAAnBC,IAAmB,uEAAZ,OAAY;;AAC3D;;;AAGA,MAAIF,MAAMG,MAAN,KAAiB,CAArB,EAAwB;AACtB,QAAIC,OAAOJ,MAAM,CAAN,CAAX;AACA,QAAIK,OAAOb,UAAUQ,MAAM,CAAN,CAAV,CAAX;;AAEA,QAAIK,gBAAgBC,KAApB,EAA2B;AACzBD,aAAOX,UAAUW,IAAV,CAAP;AACD;;AAED,QAAI,CAACA,IAAL,EAAW;AACT,YAAM,IAAIE,KAAJ,CAAW,GAAEH,IAAK,iBAAlB,CAAN;AACD;;AAED,QAAI,EAAEF,QAAQG,IAAV,CAAJ,EAAqB;AACnB,YAAM,IAAIE,KAAJ,CAAW,mBAAkBH,IAAK,OAAMF,IAAK,QAA7C,CAAN;AACD;;AAED,WAAOG,KAAKH,IAAL,EAAWE,IAAX,EAAiBH,UAAjB,EAA6B,CAAC,CAACR,YAAYW,IAAZ,CAA/B,CAAP;AACD;;AAED;;;AAGA,SAAO,mBAAYJ,MAAMQ,GAAN,CAAU,gBAAQ;AACnC,QAAIC,OAAOjB,UAAUY,IAAV,CAAX;;AAEA,QAAIK,gBAAgBH,KAApB,EAA2B;AACzBG,aAAOf,UAAUe,IAAV,CAAP;AACD;;AAED,QAAI,CAACA,IAAL,EAAW;AACT,YAAM,IAAIF,KAAJ,CAAW,GAAEH,IAAK,iBAAlB,CAAN;AACD;;AAED,QAAI,EAAEF,QAAQO,IAAV,CAAJ,EAAqB;AACnB,YAAM,IAAIF,KAAJ,CAAW,mBAAkBH,IAAK,OAAMF,IAAK,QAA7C,CAAN;AACD;;AAED,WAAOO,KAAKP,IAAL,EAAWE,IAAX,EAAiBH,UAAjB,EAA6B,CAAC,CAACR,YAAYW,IAAZ,CAA/B,CAAP;AACD,GAhBkB,CAAZ,CAAP;AAiBD,CA3CM","file":"../../src/tasks/goal.js","sourcesContent":["/**\n * @file src/tasks/mgr.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport createWatch from './watch'\nimport createSteps from './steps'\nimport createParallel from './parallel'\n\nlet taskDefns\nlet bustedTasks\n\nfunction fromArray (arr) {\n  if (arr[0] === 'parallel') {\n    return createParallel(arr[1])\n  }\n\n  if (arr[0] === 'steps') {\n    return createSteps(arr[1])\n  }\n\n  return createWatch(arr[1])\n}\n\nexport const defineTasks = (defns, busted) => {\n  taskDefns = defns\n  bustedTasks = busted\n\n  createSteps.defineTasks(defns, busted)\n  createParallel.defineTasks(defns, busted)\n}\n\nexport const create = (tasks, projectDir, mode = 'start') => {\n  /**\n   * If single task, don't bother wrapping with .all().\n   */\n  if (tasks.length === 1) {\n    let name = tasks[0]\n    let goal = taskDefns[tasks[0]]\n\n    if (goal instanceof Array) {\n      goal = fromArray(goal)\n    }\n\n    if (!goal) {\n      throw new Error(`${name}: no such task.`)\n    }\n\n    if (!(mode in goal)) {\n      throw new Error(`Cannot run task ${name} in ${mode} mode!`)\n    }\n\n    return goal[mode](name, projectDir, !!bustedTasks[name])\n  }\n\n  /**\n   * Otherwise wrap all.\n   */\n  return Promise.all(tasks.map(name => {\n    let task = taskDefns[name]\n\n    if (task instanceof Array) {\n      task = fromArray(task)\n    }\n\n    if (!task) {\n      throw new Error(`${name}: no such task.`)\n    }\n\n    if (!(mode in task)) {\n      throw new Error(`Cannot run task ${name} in ${mode} mode!`)\n    }\n\n    return task[mode](name, projectDir, !!bustedTasks[name])\n  }))\n}\n"]}