{"version":3,"sources":["../../src/compat/else.js"],"names":["require","version","lt","lock","v","sc","lte","Error"],"mappings":";;;;;;AAMA;;;;;;eAEoBA,QAAQ,oBAAR,C;IAAZC,O,YAAAA,O,EARR;;;;;;kBAUe,gBAAQ;AACrB,MAAI,iBAAOC,EAAP,CAAUC,KAAKC,CAAf,EAAkB,gBAAlB,CAAJ,EAAyC;AACvCD,SAAKC,CAAL,GAASH,OAAT;;AAEA;AACA;AACA;AACA,WAAOE,KAAKE,EAAZ;;AAEA,WAAOF,IAAP;AACD;;AAED;AACA;AACA,MAAI,iBAAOG,GAAP,CAAWH,KAAKC,CAAhB,EAAmBH,OAAnB,CAAJ,EAAiC;AAC/BE,SAAKC,CAAL,GAASH,OAAT;AACA,WAAOE,IAAP;AACD;;AAED,QAAM,IAAII,KAAJ,CAAU,uEAAuEJ,KAAKC,CAAtF,CAAN;AACD,C","file":"../../src/compat/else.js","sourcesContent":["/**\n * @file src/compat/else.js\n * @license MIT\n * @copyright 2017 10244872 Canada Inc.\n */\n\nimport semver from 'semver'\n\nconst { version } = require('../../package.json')\n\nexport default lock => {\n  if (semver.lt(lock.v, '1.0.0-alpha.11')) {\n    lock.v = version\n\n    // below alpha 11, there are race conditions with\n    // the state cache - so discard it and let it be\n    // reconstructed\n    delete lock.sc\n\n    return lock\n  }\n\n  // final rule if all else passes is to just allow the\n  // updating by changing the version number\n  if (semver.lte(lock.v, version)) {\n    lock.v = version\n    return lock\n  }\n\n  throw new Error('Sorry, this version of hopp does not support lockfiles from hopp v' + lock.v)\n}\n"]}