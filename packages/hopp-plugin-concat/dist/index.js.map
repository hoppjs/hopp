{"version":3,"sources":["../lib/index.js"],"names":["tmp","require","config","mode","bundle","ctx","data","args","length","Error","opts","prefix","size","body","toString","suffix"],"mappings":";;;;;;;;AAAA;;;;AAIA,IAAIA,MAAM,KAAV;AACA;;;AAGAC,QAAQ,6BAAR;;AAEA;;;AAGO,IAAMC,0BAAS;AACpBC,QAAM,QADc;AAEpBC,UAAQ;;AAGV;;;;AALsB,CAAf;;uDASQ,iBAAOC,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAITD,IAAIE,IAAJ,CAASC,MAAT,GAAkB,CAJT;AAAA;AAAA;AAAA;;AAAA,kBAKL,IAAIC,KAAJ,CAAU,kCAAV,CALK;;AAAA;;AAQb;;;;;AAKMC,gBAbO,GAaAL,IAAIE,IAAJ,CAAS,CAAT,KAAe,EAbf;AAcb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAIL,OAAOE,MAAP,IAAiB,CAACJ,GAAtB,EAA2B;AACzB;AACA,kBAAIU,KAAKC,MAAT,EAAiB;AACfL,qBAAKM,IAAL,IAAaF,KAAKC,MAAL,CAAYH,MAAzB;AACAF,qBAAKO,IAAL,GAAYH,KAAKC,MAAL,GAAcL,KAAKO,IAAL,CAAUC,QAAV,EAA1B;AACD;AACD;AACA,kBAAIJ,KAAKK,MAAT,EAAiB;AACfT,qBAAKM,IAAL,IAAaF,KAAKK,MAAL,CAAYP,MAAzB;AACAF,qBAAKO,IAAL,GAAYP,KAAKO,IAAL,CAAUC,QAAV,KAAuBJ,KAAKK,MAAxC;AACD;AACDf,oBAAM,IAAN;AACD;;AArCY,6CAuCNM,IAvCM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"../lib/index.js","sourcesContent":["/**\n * @file index.src.js\n * @license MIT\n */\nlet tmp = false\n/**\n * For node v4.\n */\nrequire('regenerator-runtime/runtime')\n\n/**\n * This enables the concatenation.\n */\nexport const config = {\n  mode: 'buffer',\n  bundle: true\n}\n\n/**\n * We don't need to do any real transformation.\n * suffix and prefix features\n */\nexport default async (ctx, data) => {\n  /**\n   * unexpected num of arguments handling\n   */\n  if (ctx.args.length > 1) {\n    throw new Error('Unexpected numbers of arguments.')\n  }\n\n  /**\n   * options assign\n   *  @param suffix adding string at the end of the each file\n   *  @param prefix adding string at the beginning of the first packet\n   */\n  const opts = ctx.args[0] || {}\n  // // prefix\n  // if (opts.prefix && !tmp) {\n  //   data.size += opts.prefix.length\n  //   data.body = opts.prefix + data.body.toString();\n  // }\n  // // suffix \n  // if (opts.suffix && !tmp) {\n  //   data.size += opts.prefix.length\n  //   data.body = data.body.toString() + opts.suffix\n  // }\n\n  if (config.bundle && !tmp) {\n    // prefix\n    if (opts.prefix) {\n      data.size += opts.prefix.length\n      data.body = opts.prefix + data.body.toString()\n    }\n    // suffix\n    if (opts.suffix) {\n      data.size += opts.suffix.length\n      data.body = data.body.toString() + opts.suffix\n    }\n    tmp = true\n  }\n\n  return data\n}\n"]}